MySQLコマンドなどメモ

============================================================================================================================

コマンドやコマンド例など

show databases;
　→ サーバーに現在どのようなデータベースが存在するかを調べる。

create database データベース名;
　→ データベースを作成する。

use データベース名
　→ データベースにアクセスする。セミコロンが不要、1行で完結させるといった点に注意。

select database();
　→ 現在選択しているデータベースを表示する。

show tables;
　→　データベースが保持しているテーブルの一覧を表示する。

create table テーブル名 (列名1 列のデータ型, 列名2 列のデータ型…);
　→ テーブルのレイアウトを指定する。

describe テーブル名;
　→ テーブルのレイアウトを表示する。

load data local infile 'ファイルパス' into table テーブル名;
　→ テーブルにファイルからデータをロードする。MySQL8.0からデフォルトでできなくなっているので注意。
　　Windowsでは　LINES TERMINATED BY '\r\n';　が必要。

　　concurrent = load dataの実行中に、他のスレッドがこのテーブルからデータを取り出すことができる。
　　ignore 数値 lines = ファイルの先頭にある行を無視するのに使用される。

set global システム変数名=ステータス;
　→ システム変数の設定を一時的に変更する。
　　サーバーが終了すると変更したシステム変数は元の設定に戻る。

set persist システム変数名=ステータス;
　→ システム変数の設定を永続的に変更する。set persist_onlyとすると、即座に反映は行われず、
　　次にMySQLを再起動したときに反映される。

insert into テーブル名 values ('値1','値2', …);
　→ テーブルに新しいレコードを追加する。左の列から順に値1,値2と格納していく。

selectステートメント
　→ テーブルの内容を取り出す。使い方の例としては以下。

　　select * from テーブル名;
　　　→ テーブルの全ての内容を取り出す。ただし、テーブルに非表示カラムが含まれている場合、
　　　　*には非表示カラムは含まれない。

　　select * from tableName where name = 'tatle';
　　　→ テーブルの特定のレコードを取り出す。

　　select * from pet where birth >= '1990-01-01';
　　　→ テーブルから条件に合ったレコードを取り出す。

　　select * from pet where species = 'cat' and sex = 'f';
　　　→ AND演算子を用いて複数条件を満たしたレコードを取り出す。
　　　　OR演算子も用いることができる。ANDとORは一緒に使用できるが、ANDはORよりも高い優先順位を
　　　　持っているため、両方の演算子を一緒に使用する場合は、()を使用して
　　　　条件の組み合わせ方を明示的に示した方が良い。

　　select name from pet;
　　　→ テーブルから特定の列を取得する。複数指定する場合は指定する列を,で区切る。
　　　　nameの前にdistinctオプションをつけると、重複したレコードを1回だけ表示するようにする。

　　select * from pet order by birth;
　　　→ order byオプションをつけることでソートできる。この場合はbirthが古い順から表示されていく。

　　select * from pet order by owner, birth desc;
　　　→ ownerをデフォルトの昇順でソートして表示し、同じownerの場合は誕生日の降順で表示している。
　　　　descオプションは降順で表示するオプション。descはその直前のカラム名にだけ適用される。

　　select name, birth, curdate(), timestampdiff(year,birth,curdate()) as age from pet;
　　　→ timestampdiff()関数を用いて年齢を表示している。

delete from テーブル名;
　→ テーブルの全ての内容を消去する。

update テーブル名 set 変更するフィールド名 = '変更後の値' where 検索するフィールド名 = '一致する値';
　→ 該当するレコードだけを変更する。例としては以下の通り。
　　update pet set birth = '1989-08-31' where name = 'fluffy';

============================================================================================================================

関数一覧

timestampdiff(単位,日付1,日付2)
　→ 日付1と日付2の差異を指定した単位で表示する。


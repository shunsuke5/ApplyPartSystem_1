MySQL勉強メモ

・サーバーに接続するには、通常、mysqlの起動時にMySQLユーザー名とパスワードを指定する必要がある。
　サーバーがログインしたマシン以外で実行されている場合は、ホスト名も指定する必要がある。
　「mysql -h ホスト名 -u ユーザー名 -p」 で接続できる。ホスト名はMySQLサーバーが稼働しているホストの名前、
　ユーザー名はMySQLのアカウントのユーザー名。その後Enter password:で正しいパスワードを入力できたら
　紹介情報に続いてmysql>プロンプトが表示される。これでmysql>プロンプトに、mysqlでSQLステートメントを
　入力する準備ができていることが示される。

・ログイン時に以下のようなエラーメッセージが表示される場合がある。
　「ERROR 2002 (HY000): Can't connect to local MySQL server through socket '/tmp/mysql.sock'」
　これは、MySQLサーバーデーモン(Unix)またはサービス(Windows)が起動していないことを示している。

・クエリーとは、「問い合わせ」という意味。MySQLではSQL言語を用いてマシンにデータを要求する文のことを指していると思われる。

・クエリーは通常、SQLステートメントの後にセミコロンが続くもので構成される。
　クエリーを発行すると、mysqlはそのクエリーをサーバーに送信して実行し、
　結果を表示してから別のクエリーの準備ができていることを示す別のmysqlプロンプトを出力する。

・MySQLは、クエリーの出力を表形式(行と列)で表示する。最初の行には列のラベルが表示される。

・mysqlでは、入力業の終わりを探すのではなく、終了セミコロンを探すことによって、ステートメントの終了位置が決定される。
　つまり、mysqlは自由形式の入力を受け入れる。入力業を収集するが、セミコロンが見つかるまでは実行しない。

・プロンプトがmysqlから->に変化した場合、これはmysqlがまだ完全なステートメントを検出しておらず、
　残りの入力を待機していることを示している。入力処理中のクエリーを実行しない場合は \c と入力して取り消す。
　プロンプトのフィードバックを見れば、mysqlが何を待機しているのかを認識することができる。
　以下に表示される各プロンプトとそれらが示すmysqlの状態をまとめる。

　mysql> = 新規クエリーの準備完了
　->　　 = 複数行クエリーの次の行を待機している
　'>　　 = 次の行を待機しており、シングルクォーテーションで始まる文字列の完了を待機している
　">　　 = 次の行を待機し、ダブルクォーテーションで始まる文字列の完了を待機している
　`>　　 = 次の行を待機しており、バッククォーテーションで始まる識別子の完了を待機している
　/*>　　= /*で始まったコメントが完了するまで次の行を待機している

・複数行のステートメントは、単一行に対してクエリーを発行しようとしたが、終了セミコロンを忘れた場合に発生する。

・QUITとUSEにはセミコロンは必要ない。USEステートメントは、1行内に記述する必要がある。

・UNIXでは、データベース名は大文字と小文字が区別されるため(SQLキーワードとは異なり)、
　常に正しいデータベース名を参照する必要がある。

・createでデータベースを作成しても、そのデータベースにはアクセスしない。アクセスるにはuseで明示的に選択する必要がある。

・MySQLを起動したときにも入るデータベースを指定できる。
　mysql -h host -u user -p データベース名 のように、必要な接続パラメータを全て指定した後にデータベースの名前を指定する。

・データベースの作成は簡単だが、作成しただけではテーブルは空。難しいのは、データベースの構造、
　つまりどのようなテーブルが必要で各テーブルにどのような列を含めるかを決定すること。
　例えばペットの記録を格納するテーブルが必要だとする。このテーブルにpetという名前をつけることができ、
　少なくとも各ペットの名前を含めるべき。名前事態に深い意味は無いため、他の情報として種や性別、
　家族の複数メンバーがペットを飼っている場合は各ペットの所有者を記録することもできる。
　年齢はどうだろうか？重要な情報ではあるが、データベースに格納するには適さない。なぜなら、年齢は時間の経過によって変化するため、
　記録を頻繁に更新する必要が生じるから。代わりに、生年月日などの固定値を格納する方が良い。そうしておけば、
　年齢が必要になった時に、現在の日付と生年月日の差として計算することができるため。

　このように、データベースに含む情報にも良し悪しがあるため、そのデータが必要かどうか疑問に思った時は
　データを頻繁に更新する必要があるか、他の形のデータで代わりが効かないかなどを考えてみる方が良い。

・空のテーブルにデータを格納する簡単な方法は、各データ(ペット)に対応する行を記述したテキストファイルを作成してから、
　1つのステートメントでそのファイルの内容をテーブルにロードすること。1行に1レコードを記述したテキストファイルから
　テーブルにロードするには、loadステートメントを使用する。

　新しいレコードを1つずつ追加する場合は、insertステートメントが役立つ。

・

============================================================================================================================

わからないこと

・vscodeからファイルのパスをコピーして貼り付けると、バックスラッシュが1つしかないため
　2つにしたい時に不便。どうすればよいか？

・

============================================================================================================================

エラーやミス、つまずいたことなど

・テキストファイルからテーブルにデータをロードしようとし、load data local infile 'ファイルパス\ファイル名' into table pet;
　のようにしたら、以下のエラーが出た。
　「ERROR 3948 (42000): Loading local data is disabled; this must be enabled on both the client and server sides」
　　→ サーバとクライアントの両方で「local-infile」パラメータを「ON」にする必要がある。
　　　MySQL8.0からセキュリティ強化のため、「load data infile local」コマンドはデフォルトで無効にされてしまったことによるエラー。

　　　set persist local_infile=on;(サーバー側、MySQL内で実行)
　　　mysql -u root -p --local_infile=1(クライアント側、コマンドプロンプトで実行)

　　　上記の2つのコマンドを実行し、ロードすることができた。
　　　ファイルからデータをロードする場合は、コマンドプロンプト側で毎回このコマンドを打つ必要がありそう？

・なぜかMySQLディレクトリにbinディレクトリが無く、Windowsに環境変数パスを通すことができない
　　→ 隠しディレクトリであるC:\ProgramData の方のMySQLを確認してしまっていたため。
　　　正しく見るべきディレクトリは C:\Program Files\MySQL\MySQL Server 8.3 の方だった。

・